---
// 文件路径: src/components/widget/Profile.astro
// 版本: v4.0 - 客户端脚本现在请求本地的 API 代理，以绕过 CORS 限制。

import { Icon } from "astro-icon/components";
import { profileConfig, umamiConfig } from "../../config";
import { url } from "../../utils/url-utils";
import ImageWrapper from "../misc/ImageWrapper.astro";

const umamiEnabled = umamiConfig.enabled || false;
---

<!-- HTML 模板部分保持不变 -->
<div class="card-base p-3">
    <a aria-label="Go to About Page" href={url('/about/')}
       class="group block relative mx-auto mt-1 lg:mx-0 lg:mt-0 mb-3
       max-w-[12rem] lg:max-w-none overflow-hidden rounded-xl active:scale-95">
        <div class="absolute transition pointer-events-none group-hover:bg-black/30 group-active:bg-black/50
        w-full h-full z-50 flex items-center justify-center">
            <Icon name="fa6-regular:address-card"
                  class="transition opacity-0 scale-90 group-hover:scale-100 group-hover:opacity-100 text-white text-5xl">
            </Icon>
        </div>
        <ImageWrapper src={profileConfig.avatar || ""} alt="Profile Image of the Author" class="mx-auto lg:w-full h-full lg:mt-0 "></ImageWrapper>
    </a>
    <div class="px-2">
        <div class="font-bold text-xl text-center mb-1 dark:text-neutral-50 transition">{profileConfig.name}</div>
        <div class="h-1 w-5 bg-[var(--primary)] mx-auto rounded-full mb-2 transition"></div>
        <div class="text-center text-neutral-400 mb-2.5 transition">{profileConfig.bio}</div>
        <div class="flex gap-2 justify-center mb-1">
            {profileConfig.links.length > 1 && profileConfig.links.map(item =>
                    <a rel="me" aria-label={item.name} href={item.url} target="_blank" class="btn-regular rounded-lg h-10 w-10 active:scale-90">
                        <Icon name={item.icon} class="text-[1.5rem]"></Icon>
                    </a>
            )}
            {profileConfig.links.length == 1 && <a rel="me" aria-label={profileConfig.links[0].name} href={profileConfig.links[0].url} target="_blank"
                                            class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95">
                <Icon name={profileConfig.links[0].icon} class="text-[1.5rem]"></Icon>
                {profileConfig.links[0].name}
            </a>}
        </div>
        {umamiEnabled && (
            <div class="text-sm text-gray-500 mt-2 text-center">
                <Icon name="fa6-solid:eye" class="inline-block mr-1 text-gray-400 text-sm align-middle" />
                <span id="site-stats-display">统计加载中...</span>
            </div>
        )}
    </div>
</div>

<!-- 【核心修正】客户端脚本现在请求我们自己创建的 API 代理 -->
{umamiEnabled && (
    <script>
        async function fetchTotalSiteStats() {
            try {
                // 请求我们自己的 /api/umami-stats 代理，而不是直接请求 Umami
                const response = await fetch('/api/umami-stats');
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.error || `服务器代理响应失败: ${response.status}`);
                }
                return await response.json();
            } catch (error) {
                console.error('[Profile.astro Script] 通过代理获取总访问量时出错:', error);
                return null;
            }
        }

        function updateDisplay(stats) {
            const displayElement = document.getElementById('site-stats-display');
            if (!displayElement) return;

            if (stats && stats.pageviews && stats.visits) {
                displayElement.textContent = `总浏览 ${stats.pageviews.value} · 总访客 ${stats.visits.value}`;
            } else {
                displayElement.textContent = '统计不可用';
            }
        }

        async function initializeStats() {
            const stats = await fetchTotalSiteStats();
            updateDisplay(stats);
        }

        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initializeStats);
        } else {
            initializeStats();
        }
    </script>
)}

