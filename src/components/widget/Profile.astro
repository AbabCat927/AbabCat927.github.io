---
// ==================================================================
// 文件路径: src/components/widget/Profile.astro
// 功能描述: 这是用于显示作者个人信息卡片的组件，通常放置在侧边栏。
//           我们已将其升级，使其能够通过我们自建的 API 代理来安全地获取并显示【整个网站】的总访问量。
// 当前版本: v6.0 - 脚本逻辑已分离到外部模块，以实现与 Swup.js 的完全兼容。
// ==================================================================

// --- 1. 服务器端脚本 (`---` 块内) ---
// 这部分代码只会在服务器构建网站时运行一次，我们保持其原有结构。

// 从 Astro 的图标库导入 Icon 组件，用于显示社交链接等小图标。
import { Icon } from "astro-icon/components";
// 从项目的主配置文件中导入 profileConfig 和 umamiConfig。
import { profileConfig, umamiConfig } from "../../config";
// 导入一个用于生成正确 URL 的工具函数。
import { url } from "../../utils/url-utils";
// 导入一个自定义的图片包装组件。
import ImageWrapper from "../misc/ImageWrapper.astro";

// 从 Umami 配置中解析出“是否启用”的状态，如果未定义则默认为 false。
const umamiEnabled = umamiConfig.enabled || false;
---

<!-- --- 2. HTML 模板部分 --- -->
<!-- 这部分定义了组件的结构，完全保持您原始文件的样子。 -->

<div class="card-base p-3">
    <a aria-label="Go to About Page" href={url('/about/')}
       class="group block relative mx-auto mt-1 lg:mx-0 lg:mt-0 mb-3
       max-w-[12rem] lg:max-w-none overflow-hidden rounded-xl active:scale-95">
        <div class="absolute transition pointer-events-none group-hover:bg-black/30 group-active:bg-black/50
        w-full h-full z-50 flex items-center justify-center">
            <Icon name="fa6-regular:address-card"
                  class="transition opacity-0 scale-90 group-hover:scale-100 group-hover:opacity-100 text-white text-5xl">
            </Icon>
        </div>
        <ImageWrapper src={profileConfig.avatar || ""} alt="Profile Image of the Author" class="mx-auto lg:w-full h-full lg:mt-0 "></ImageWrapper>
    </a>
    <div class="px-2">
        <div class="font-bold text-xl text-center mb-1 dark:text-neutral-50 transition">{profileConfig.name}</div>
        <div class="h-1 w-5 bg-[var(--primary)] mx-auto rounded-full mb-2 transition"></div>
        <div class="text-center text-neutral-400 mb-2.5 transition">{profileConfig.bio}</div>
        <div class="flex gap-2 justify-center mb-1">
            {profileConfig.links.length > 1 && profileConfig.links.map(item =>
                    <a rel="me" aria-label={item.name} href={item.url} target="_blank" class="btn-regular rounded-lg h-10 w-10 active:scale-90">
                        <Icon name={item.icon} class="text-[1.5rem]"></Icon>
                    </a>
            )}
            {profileConfig.links.length == 1 && <a rel="me" aria-label={profileConfig.links[0].name} href={profileConfig.links[0].url} target="_blank"
                                            class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95">
                <Icon name={profileConfig.links[0].icon} class="text-[1.5rem]"></Icon>
                {profileConfig.links[0].name}
            </a>}
        </div>
        <!-- 总访问量显示区域 -->
        {umamiEnabled && (
            <div class="text-sm text-gray-500 mt-2 text-center">
                <Icon name="fa6-solid:eye" class="inline-block mr-1 text-gray-400 text-sm align-middle" />
                <span id="site-stats-display">统计加载中...</span>
            </div>
        )}
    </div>
</div>

<!-- --- 3. 客户端脚本 (`<script>` 块) --- -->
<!-- 只有在启用了 Umami 的情况下，这个脚本块才会被加载到页面中。 -->
{umamiEnabled && (
    <script>
        // 【核心修正】从我们新创建的外部模块中导入用于初始化【总访问量】的函数。
        // Astro 会自动将这段代码处理成 <script type="module">，从而解决所有兼容性问题。
        import { initializeTotalStats } from '../../utils/umami-client.ts';

        // 在页面首次加载时，直接调用初始化函数。
        // 这个函数会去获取并显示整个网站的总访问量和总访客数。
        initializeTotalStats();

        // 为了与 Swup 完美兼容，我们同样监听它的 'content:replace' 事件。
        // 因为个人信息卡片（包含总访问量）可能会在每个页面都显示，
        // 所以当 Swup 通过平滑过渡加载完新页面内容后，我们需要重新运行一次初始化函数，
        // 以确保统计数据能够在新页面上正确加载和显示。
        document.addEventListener('swup:content:replace', initializeTotalStats);
    </script>
)}

