---
// 文件路径: src/components/widget/VisitCounter.astro
// 功能: 这是一个专门用于从 Umami API 获取并显示网站访问量的组件。
// 版本: v3.0 - 修正了数据源，现在从正确的 umamiConfig 结构中读取数据，并增加了健壮性检查。

import { umamiConfig } from "../../config";

// --- 步骤 1: 从您的【新】配置中安全地解析出所有需要的信息 ---

// 【修正】直接从 umamiConfig 中获取 websiteId，不再使用正则表达式。
const websiteId = umamiConfig.websiteId;

// 【修正】为了获取 shareId 和 region，我们需要在 config.ts 中添加一个新字段。
// 这里我们先安全地解析它，如果不存在也不会崩溃。
const fullShareUrl = umamiConfig.shareUrl; // 假设新字段叫 shareUrl
const shareUrlParts =
	typeof fullShareUrl === "string"
		? fullShareUrl.match(
				/https:\/\/([a-z]{2})\.umami\.is\/share\/([a-zA-Z0-9]+)/,
			)
		: null;

const region = shareUrlParts?.[1];
const shareId = shareUrlParts?.[2];

// --- 步骤 2: 定义一个异步函数来获取访问量数据 ---

async function getVisitCount() {
	// 【修正】更新了检查条件，确保所有必需信息都存在。
	if (!websiteId || !region || !shareId) {
		console.error(
			"Umami VisitCounter 错误：无法获取 websiteId, region, 或 shareId。请确保在 config.ts 中正确配置了 websiteId 和 shareUrl。",
		);
		// 返回 'N/A' 而不是 0，让前端明确显示错误状态。
		return "N/A";
	}

	try {
		// 第一步: 获取临时的访问令牌 (token)
		const tokenResponse = await fetch(
			`https://${region}.umami.is/api/share/${shareId}`,
		);

		if (!tokenResponse.ok) {
			throw new Error(`获取 Umami Token 失败，状态码: ${tokenResponse.status}`);
		}
		const { token } = await tokenResponse.json();
		if (!token) {
			throw new Error("Umami API 返回的数据中不包含 Token。");
		}

		// 第二步: 使用获取到的 token 去请求真实的统计数据
		const statsResponse = await fetch(
			`https://${region}.umami.is/api/websites/${websiteId}/stats`,
			{
				method: "GET",
				headers: {
					Authorization: `Bearer ${token}`,
				},
			},
		);

		if (!statsResponse.ok) {
			throw new Error(
				`获取 Umami 统计数据失败，状态码: ${statsResponse.status}`,
			);
		}
		const data = await statsResponse.json();

		// 返回统计到的 pageviews 值
		return data?.pageviews?.value || 0;
	} catch (error) {
		console.error("获取 Umami 访问量数据时发生严重错误:", error);
		return "N/A"; // 出错时也返回 'N/A'
	}
}

const visitCount = await getVisitCount();
---

<!-- HTML 和 Style 部分保持不变 -->
<div class="visit-counter-widget">
    <span class="icon">👁️</span>
    <span class="label">总访问量:</span>
    <span class="count">{visitCount}</span>
</div>

<style>
/* 样式保持不变 */
.visit-counter-widget {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background-color: var(--card-bg);
  border-radius: 0.5rem;
  font-size: 0.9em;
  color: var(--text-color);
  border: 1px solid var(--card-border-color);
}
.icon {
  font-size: 1.2em;
}
.label {
  color: var(--text-color-light);
}
.count {
  font-weight: 600;
  color: var(--primary-color);
}
</style>