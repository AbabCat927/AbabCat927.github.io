---
import { umamiConfig } from "../../config";

const UMAMI_URL = import.meta.env.UMAMI_URL;
const UMAMI_USERNAME = import.meta.env.UMAMI_USERNAME;
const UMAMI_PASSWORD = import.meta.env.UMAMI_PASSWORD;
const UMAMI_WEBSITE_ID = import.meta.env.UMAMI_WEBSITE_ID;
const isEnabled = umamiConfig.enabled;

async function getVisitCount() {
	if (!UMAMI_URL || !UMAMI_USERNAME || !UMAMI_PASSWORD || !UMAMI_WEBSITE_ID) {
		console.error(
			"Umami 错误：缺少必要的环境变量。请检查项目根目录下的 .env 文件。",
		);
		return "N/A";
	}

	try {
		const loginResponse = await fetch(`${UMAMI_URL}/api/auth/login`, {
			method: "POST",
			headers: { "Content-Type": "application/json" },
			body: JSON.stringify({
				username: UMAMI_USERNAME,
				password: UMAMI_PASSWORD,
			}),
		});

		if (!loginResponse.ok) {
			throw new Error(
				`Umami登录失败，状态码: ${loginResponse.status}。请检查用户名和密码。`,
			);
		}
		const { token } = await loginResponse.json();
		if (!token) {
			throw new Error("未能从 Umami 获取 Token。");
		}

		const startDate = new Date("2020-01-01").getTime();
		const endDate = Date.now();

		const statsResponse = await fetch(
			`${UMAMI_URL}/api/websites/${UMAMI_WEBSITE_ID}/stats?startAt=${startDate}&endAt=${endDate}`,
			{
				method: "GET",
				headers: { Authorization: `Bearer ${token}` },
			},
		);

		if (!statsResponse.ok) {
			throw new Error(`获取统计数据失败，状态码: ${statsResponse.status}`);
		}
		const data = await statsResponse.json();
		return data?.pageviews?.value || 0;
	} catch (error) {
		console.error("获取 Umami 访问量数据时发生严重错误:", error);
		return "N/A";
	}
}

const visitCount = isEnabled ? await getVisitCount() : null;
---

{visitCount !== null && (
    <div class="visit-counter">
        <span>总访问量: {visitCount}</span>
    </div>
)}