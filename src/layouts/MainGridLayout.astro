---
// 从 Astro 导入基础组件和类型
import BackToTop from "@components/control/BackToTop.astro";
import Footer from "@components/Footer.astro";
import Navbar from "@components/Navbar.astro";
import SideBar from "@components/widget/SideBar.astro";
import type { MarkdownHeading } from "astro";
import { Icon } from "astro-icon/components";

// 从项目内部导入组件和配置
import FullscreenWallpaper from "../components/misc/FullscreenWallpaper.astro";
import IconifyLoader from "../components/misc/IconifyLoader.astro";
import ImageWrapper from "../components/misc/ImageWrapper.astro";
import TypewriterText from "../components/TypewriterText.astro";
import TOC from "../components/widget/TOC.astro";
import {
	fullscreenWallpaperConfig,
	sidebarLayoutConfig,
	siteConfig,
} from "../config";
import {
	BANNER_HEIGHT,
	BANNER_HEIGHT_EXTEND,
	MAIN_PANEL_OVERLAPS_BANNER_HEIGHT,
} from "../constants/constants";
import { widgetManager } from "../utils/widget-manager";
import Layout from "./Layout.astro";

// 定义组件接收的属性 (Props) 类型
interface Props {
	title?: string;
	banner?: string;
	description?: string;
	lang?: string;
	setOGTypeArticle?: boolean;
	postSlug?: string;
	headings?: MarkdownHeading[];
}

// 类型守卫函数：检查 banner.src 是否为包含 desktop/mobile 的对象
const isBannerSrcObject = (
	src:
		| string
		| string[]
		| { desktop?: string | string[]; mobile?: string | string[] },
): src is { desktop?: string | string[]; mobile?: string | string[] } => {
	return (
		typeof src === "object" &&
		src !== null &&
		!Array.isArray(src) &&
		("desktop" in src || "mobile" in src)
	);
};

// 异步辅助函数：获取最终要显示的 banner 图片
const getBannerImages = async () => {
	let bannerSrc = siteConfig.banner.src;

	// 如果启用了图片 API，则尝试从 API 获取图片链接
	if (siteConfig.banner.imageApi?.enable && siteConfig.banner.imageApi?.url) {
		try {
			const response = await fetch(siteConfig.banner.imageApi.url);
			const text = await response.text();
			// 将返回的文本按行分割，并过滤掉空行
			const apiImages = text.split("\n").filter((line) => line.trim());

			if (apiImages.length > 0) {
				bannerSrc = apiImages; // 使用 API 获取到的图片
			}
		} catch (error) {
			console.warn("从图片 API 获取图片失败:", error);
		}
	}

	// 如果 bannerSrc 是一个区分桌面和移动端的对象
	if (isBannerSrcObject(bannerSrc)) {
		const srcObj = bannerSrc;
		return {
			desktop: srcObj.desktop || srcObj.mobile || "", // 桌面端优先用 desktop，否则用 mobile
			mobile: srcObj.mobile || srcObj.desktop || "", // 移动端优先用 mobile，否则用 desktop
		};
	}
	// 如果是字符串或字符串数组，则桌面和移动端使用相同图片
	return {
		desktop: bannerSrc,
		mobile: bannerSrc,
	};
};

// 执行函数获取图片数据
const bannerImages = await getBannerImages();

// 从 Astro.props 解构出所有属性
const {
	title,
	banner,
	description,
	lang,
	setOGTypeArticle,
	postSlug,
	headings = [],
} = Astro.props;

// 检查是否需要显示 banner 图片来源信息
const hasBannerCredit =
	siteConfig.banner.enable && siteConfig.banner.credit.enable;
// 检查图片来源链接是否存在
const hasBannerLink = !!siteConfig.banner.credit.url;

// --- 动态计算布局相关变量 ---

// 检查当前页面是否为首页
const isHomePage = Astro.url.pathname === "/";
const showHomeText = siteConfig.banner.homeText?.enable && isHomePage;
// 手机端非首页时，为 banner 添加隐藏的 CSS 类
const mobileNonHomeBannerClass = !isHomePage ? "mobile-hide-banner" : "";

// 计算主内容面板的 top 值
const mainPanelTop = siteConfig.banner.enable
	? `calc(${BANNER_HEIGHT}vh - ${MAIN_PANEL_OVERLAPS_BANNER_HEIGHT}rem)`
	: "5.5rem";
const finalMainPanelTop = siteConfig.banner.enable ? mainPanelTop : "5.5rem";

// --- 侧边栏和网格布局动态计算 ---
const globalSidebarEnabled = sidebarLayoutConfig.enable;
const sidebarPosition = sidebarLayoutConfig.position || "left";

// 判断在不同设备宽度下是否应显示侧边栏
const mobileShowSidebar =
	globalSidebarEnabled && widgetManager.shouldShowSidebar("mobile");
const tabletShowSidebar =
	globalSidebarEnabled && widgetManager.shouldShowSidebar("tablet");
const desktopShowSidebar =
	globalSidebarEnabled && widgetManager.shouldShowSidebar("desktop");

// 根据侧边栏的显示状态和位置，动态生成网格布局的 CSS 类
const gridCols = `
    ${mobileShowSidebar ? "grid-cols-1" : "grid-cols-1"}
    ${tabletShowSidebar ? (sidebarPosition === "right" ? "md:grid-cols-[1fr_17.5rem]" : "md:grid-cols-[17.5rem_1fr]") : "md:grid-cols-1"}
    ${desktopShowSidebar ? (sidebarPosition === "right" ? "lg:grid-cols-[1fr_17.5rem]" : "lg:grid-cols-[17.5rem_1fr]") : "lg:grid-cols-1"}
`
	.trim()
	.replace(/\s+/g, " ");

// 动态生成侧边栏容器的 CSS 类
const sidebarClass = `
    mb-4 row-start-2 row-end-3 col-span-2 onload-animation
    ${mobileShowSidebar ? "block" : "hidden"}
    ${tabletShowSidebar ? `md:block md:row-start-1 md:row-end-2 md:max-w-[17.5rem] ${sidebarPosition === "right" ? "md:col-start-2 md:col-end-3" : "md:col-start-1 md:col-end-2"}` : "md:hidden"}
    ${desktopShowSidebar ? `lg:block lg:row-start-1 lg:row-end-2 lg:max-w-[17.5rem] ${sidebarPosition === "right" ? "lg:col-start-2 lg:col-end-3" : "lg:col-start-1 lg:col-end-2"}` : "lg:hidden"}
`
	.trim()
	.replace(/\s+/g, " ");

// 动态生成主内容区域的 CSS 类
const mainContentClass = `
    transition-swup-fade overflow-hidden w-full
    ${mobileShowSidebar ? "col-span-2" : "col-span-1"}
    ${tabletShowSidebar ? `${sidebarPosition === "right" ? "md:col-start-1 md:col-end-2" : "md:col-start-2 md:col-end-3"}` : "md:col-span-1"}
    ${desktopShowSidebar ? `${sidebarPosition === "right" ? "lg:col-start-1 lg:col-end-2" : "lg:col-start-2 lg:col-end-3"}` : "lg:col-span-1"}
`
	.trim()
	.replace(/\s+/g, " ");

// --- 全屏壁纸模式 ---
const shouldEnableTransparency =
	!siteConfig.banner.enable && fullscreenWallpaperConfig.enable;
const transparentClass = shouldEnableTransparency
	? "wallpaper-transparent"
	: "";
---

<Layout title={title} banner={banner} description={description} lang={lang} setOGTypeArticle={setOGTypeArticle} postSlug={postSlug}>

<!-- 如果 Banner 被禁用且全屏壁纸被启用，则显示全屏壁纸 -->
{!siteConfig.banner.enable && fullscreenWallpaperConfig.enable && (
    <FullscreenWallpaper config={fullscreenWallpaperConfig} />
)}

<!-- 全局 Iconify 图标加载器 -->
<IconifyLoader />

<!-- 如果启用全屏壁纸透明模式，向 body 添加特定类名 -->
{shouldEnableTransparency && (
    <script>
        document.body.classList.add('wallpaper-transparent');
    </script>
)}

<!-- 导航栏 -->
<slot slot="head" name="head"></slot>
<div id="top-row" class="z-50 pointer-events-none relative transition-all duration-700 max-w-[var(--page-width)] px-0 md:px-4 mx-auto">
    <div id="navbar-wrapper" class="pointer-events-auto sticky top-0 transition-all">
        <Navbar />
    </div>
</div>

<!-- Banner 区域 -->
{siteConfig.banner.enable && 
<div id="banner-wrapper" class:list={["absolute z-10 w-full transition duration-700 overflow-hidden", mobileNonHomeBannerClass]} style={`top: -${BANNER_HEIGHT_EXTEND}vh`}>
    
    {/* 判断是显示轮播图还是单张图片 */}
    {(Array.isArray(bannerImages.desktop) && bannerImages.desktop.length > 1) || (Array.isArray(bannerImages.mobile) && bannerImages.mobile.length > 1) ? (
        <!-- 轮播图模式 -->
        <div id="banner-carousel" class="relative h-full w-full">
            <ul class="carousel-list h-full w-full">
                {Array.from({ length: Math.max(
                    Array.isArray(bannerImages.desktop) ? bannerImages.desktop.length : 0,
                    Array.isArray(bannerImages.mobile) ? bannerImages.mobile.length : 0
                ) }).map((_, index) => {
                    const hasDesktopImage = Array.isArray(bannerImages.desktop) && bannerImages.desktop[index];
                    const hasMobileImage = Array.isArray(bannerImages.mobile) && bannerImages.mobile[index];
                    if (!hasDesktopImage && !hasMobileImage) return null;
                    
                    return (
                        <li class={`carousel-item absolute inset-0 transition-all duration-500 ${index === 0 ? 'opacity-100 scale-100' : 'opacity-0 scale-110'}`}>
                            {hasMobileImage && <ImageWrapper alt={`Mobile banner image ${index + 1}`} class:list={["block lg:hidden object-cover h-full w-full transition-transform duration-500 ease-out"]} src={Array.isArray(bannerImages.mobile) ? bannerImages.mobile[index] : ''} position={siteConfig.banner.position} />}
                            {hasDesktopImage && <ImageWrapper alt={`Desktop banner image ${index + 1}`} class:list={["hidden lg:block object-cover h-full w-full transition-transform duration-500 ease-out"]} src={Array.isArray(bannerImages.desktop) ? bannerImages.desktop[index] : ''} position={siteConfig.banner.position} />}
                        </li>
                    );
                }).filter(Boolean)}
            </ul>
        </div>
    ) : (
        <!-- 单张图片模式 -->
        <div class="relative h-full w-full">
            <ImageWrapper alt="Mobile banner image of the blog" class:list={["block lg:hidden object-cover h-full w-full transition duration-700 opacity-100"]} src={(Array.isArray(bannerImages.mobile) ? bannerImages.mobile[0] : bannerImages.mobile) || (Array.isArray(bannerImages.desktop) ? bannerImages.desktop[0] : bannerImages.desktop) || ''} position={siteConfig.banner.position} />
            <ImageWrapper id="banner" alt="Desktop banner image of the blog" class:list={["hidden lg:block object-cover h-full transition duration-700 opacity-100"]} src={(Array.isArray(bannerImages.desktop) ? bannerImages.desktop[0] : bannerImages.desktop) || (Array.isArray(bannerImages.mobile) ? bannerImages.mobile[0] : bannerImages.mobile) || ''} position={siteConfig.banner.position} />
        </div>
    )}
    
    <!-- 首页 Banner 上的文本覆盖层 -->
    {siteConfig.banner.homeText?.enable && (
        <div class={`banner-text-overlay absolute inset-0 z-20 flex items-center justify-center ${!showHomeText ? 'hidden' : ''}`}>
            <div class="w-4/5 lg:w-3/4 text-center mb-0">
                <div class="flex flex-col">
                    {siteConfig.banner.homeText?.title && <h1 class="banner-title text-6xl lg:text-8xl text-white drop-shadow-lg mb-2 lg:mb-4">{siteConfig.banner.homeText.title}</h1>}
                    {siteConfig.banner.homeText?.subtitle && (
                        <h2 class="banner-subtitle text-xl lg:text-3xl text-white/90 drop-shadow-md">
                            {siteConfig.banner.homeText.typewriter?.enable ? (
                                <TypewriterText text={siteConfig.banner.homeText.subtitle} speed={siteConfig.banner.homeText.typewriter.speed} deleteSpeed={siteConfig.banner.homeText.typewriter.deleteSpeed} pauseTime={siteConfig.banner.homeText.typewriter.pauseTime} />
                            ) : (
                                Array.isArray(siteConfig.banner.homeText.subtitle) ? siteConfig.banner.homeText.subtitle[0] : siteConfig.banner.homeText.subtitle
                            )}
                        </h2>
                    )}
                </div>
            </div>
        </div>
    )}
    
    <!-- 波浪效果 -->
    <div class="waves absolute -bottom-[1px] h-[10vh] max-h-[9.375rem] min-h-[3.125rem] w-full md:h-[15vh]" id="header-waves">
        <svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 20 150 32" preserveAspectRatio="none" shape-rendering="auto">
            <defs><path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v48h-352z"></path></defs>
            <g class="parallax">
                <use xlink:href="#gentle-wave" x="48" y="0" class="opacity-25 fill-[var(--page-bg)]" style="animation-delay: -2s; animation-duration: 7s;"></use>
                <use xlink:href="#gentle-wave" x="48" y="3" class="opacity-50 fill-[var(--page-bg)]" style="animation-delay: -3s; animation-duration: 10s;"></use>
                <use xlink:href="#gentle-wave" x="48" y="5" class="opacity-75 fill-[var(--page-bg)]" style="animation-delay: -4s; animation-duration: 13s;"></use>
                <use xlink:href="#gentle-wave" x="48" y="7" class="fill-[var(--page-bg)]" style="animation-delay: -5s; animation-duration: 20s;"></use>
            </g>
        </svg>
    </div>
</div>
}

<!-- 主内容区域 -->
<div class:list={["absolute w-full z-30 pointer-events-none", mobileNonHomeBannerClass ? 'mobile-main-no-banner' : '', !siteConfig.banner.enable ? 'no-banner-layout' : '', transparentClass]} style={`top: ${finalMainPanelTop}`}>
    <div class="relative max-w-[var(--page-width)] mx-auto pointer-events-auto">
        <div id="main-grid" class:list={["transition duration-700 w-full left-0 right-0 grid grid-rows-[auto_1fr_auto] lg:grid-rows-[auto] mx-auto gap-4 px-0 md:px-4", gridCols, !mobileShowSidebar ? 'mobile-no-sidebar' : '']}>
            
            <!-- Banner 图片来源信息 -->
            {hasBannerCredit && 
            <a href={siteConfig.banner.credit.url} id="banner-credit" target="_blank" rel="noopener" aria-label="Visit image source"
               class:list={["group onload-animation transition-all absolute flex justify-center items-center rounded-full px-3 right-4 -top-[3.25rem] bg-black/60 hover:bg-black/70 h-9", {"hover:pr-9 active:bg-black/80": hasBannerLink}]}>
                <Icon class="text-white/75 text-[1.25rem] mr-1" name="material-symbols:copyright-outline-rounded"></Icon>
                <div class="text-white/75 text-xs">{siteConfig.banner.credit.text}</div>
                <Icon class:list={["transition absolute text-[oklch(0.75_0.14_var(--hue))] right-4 text-[0.75rem] opacity-0", {"group-hover:opacity-100": hasBannerLink}]} name="fa6-solid:arrow-up-right-from-square"></Icon>
            </a>}

            <!-- 侧边栏 -->
            {(mobileShowSidebar || tabletShowSidebar || desktopShowSidebar) && <SideBar class={`${sidebarClass} ${transparentClass}`} headings={headings}></SideBar>}

            <!-- 主要内容插槽 -->
            <main id="swup-container" class={`${mainContentClass} transition-main`}>
                <div id="content-wrapper" class="onload-animation transition-leaving">
                    <slot></slot>
                    <div class="footer col-span-2 onload-animation hidden lg:block"><Footer /></div>
                </div>
            </main>

            <!-- 移动端页脚 -->
            <div class="footer col-span-2 onload-animation block lg:hidden"><Footer /></div>
        </div>

        <!-- 返回顶部按钮 -->
        <BackToTop />
    </div>
</div>

<!-- 目录 (TOC) 组件，位于 Banner 之下 -->
<div class="absolute w-full z-0 hidden xl:block">
    <div class="relative max-w-[var(--page-width)] mx-auto">
        {siteConfig.toc.enable && 
        <div id="toc-wrapper" class:list={["hidden lg:block transition absolute top-0 w-[var(--toc-width)] items-center", sidebarLayoutConfig.position === "right" ? "-left-[var(--toc-width)]" : "-right-[var(--toc-width)]", {"toc-hide": siteConfig.banner.enable}]}>
            <div id="toc-inner-wrapper" class="fixed top-14 w-[var(--toc-width)] h-[calc(100vh_-_20rem)] overflow-y-scroll overflow-x-hidden hide-scrollbar">
                <div id="toc" class="w-full h-full transition-swup-fade"><TOC headings={headings} /></div>
            </div>
        </div>}

        {/* 即使禁用TOC，也保留id="toc"的空div，以确保Swup正常工作 */}
        {!siteConfig.toc.enable && <div id="toc"></div>}
    </div>
</div>
</Layout>

<style>
/* ==========================================================================
   Banner 文本动画和基础样式
   ========================================================================== */
.banner-title {
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    animation: fadeInUp 1s ease-out;
    font-weight: bold;
}

.banner-subtitle {
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.6);
    animation: fadeInUp 1s ease-out 0.3s both;
}

@keyframes fadeInUp {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
}

/* ==========================================================================
   波浪效果的硬件加速与渲染优化
   ========================================================================== */
.waves, .waves svg, .waves use {
    will-change: transform; /* 提前通知浏览器该元素将有 transform 变化 */
    transform: translateZ(0); /* 开启硬件加速 */
    backface-visibility: hidden; /* 隐藏元素的背面，优化动画性能 */
}

.waves use {
    will-change: fill; /* 优化填充色的变化 */
}

#header-waves {
    contain: layout style paint; /* 将元素隔离，优化渲染 */
    isolation: isolate; /* 创建新的堆叠上下文，防止与背景混合问题 */
    margin-bottom: -1px; /* 精确对齐，防止1px缝隙 */
}

/* 主题切换时，临时禁用 will-change 优化，防止冲突 */
.theme-changing #header-waves,
.theme-changing #header-waves svg,
.theme-changing #header-waves use {
    will-change: auto;
}

/* ==========================================================================
   禁用 Banner 时的布局样式
   ========================================================================== */
.no-banner-layout {
    top: 5.5rem !important;
    min-height: calc(100vh - 5.5rem) !important;
}
@media (max-width: 1023px) {
    .no-banner-layout {
        transition: none !important; /* 移动端禁用 banner 时移除过渡动画 */
    }
}


/* ==========================================================================
   移动端布局 (1023px 以下)
   ========================================================================== */
@media (max-width: 1023px) {
    /* --- 布局与动画 --- */
    .mobile-no-sidebar {
        display: block !important;
        width: 100% !important;
    }
    
    .mobile-no-sidebar main,
    .mobile-no-sidebar #content-wrapper {
        width: 100% !important;
        max-width: 100% !important;
        margin: 0 !important;
        padding: 0 !important;
    }

    #banner-wrapper {
        transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94), opacity 0.3s ease-out;
        transform-origin: top center;
        will-change: transform, opacity;
        transform: translateZ(0); /* 硬件加速 */
    }
    
    .mobile-hide-banner {
        transform: translateY(-100%) translateZ(0) !important;
        opacity: 0 !important;
        pointer-events: none !important;
        transition: transform 0.3s ease-in, opacity 0.2s ease-in !important;
    }
    
    .absolute.w-full.z-30 {
        transition: top 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.1s;
        will-change: top;
        transform: translateZ(0); /* 硬件加速 */
    }
    
    .absolute.w-full.z-30.mobile-main-no-banner {
        top: 5.5rem !important;
        min-height: calc(100vh - 5.5rem) !important;
        transition: top 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.2s !important;
    }

    /* --- 图片与轮播优化 --- */
    #banner-carousel, .carousel-item {
        overflow: hidden !important;
        transform-origin: center center !important;
        will-change: transform, opacity;
        transform: translateZ(0);
    }

    .carousel-item {
        transition: all 1s ease-out !important;
    }
    
    .carousel-item img, #banner img {
        object-position: center center !important;
        transition: transform 0.5s ease-out !important;
    }
    
    .carousel-item.opacity-100.scale-100 { transform: scale(1) !important; opacity: 1 !important; }
    .carousel-item.opacity-0.scale-110 { transform: scale(1.15) !important; opacity: 0 !important; }

    /* --- 水波纹 --- */
    #header-waves {
        overflow: visible;
        z-index: 5;
        transition: transform 0.3s ease-in, opacity 0.2s ease-in;
    }
    
    .mobile-hide-banner #header-waves {
        transform: translateY(-100%);
        opacity: 0;
        transition: transform 0.25s ease-in, opacity 0.15s ease-in;
    }
    
    .waves {
        bottom: -1px !important;
        position: absolute !important;
    }

    /* --- 暗色模式优化 --- */
    :root.dark .banner-text-overlay,
    @media (prefers-color-scheme: dark) {
        .banner-text-overlay {
            background: linear-gradient(to top, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.4) 50%, transparent 100%);
        }
        .banner-title { text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8); }
        .banner-subtitle { text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.7); }
    }
}


/* ==========================================================================
   特定屏幕尺寸微调
   ========================================================================== */

/* --- 平板 (641px - 1023px) --- */
@media (min-width: 641px) and (max-width: 1023px) {
    #banner-wrapper { height: 70vh !important; min-height: 500px; top: 0 !important; }
    .absolute.w-full.z-30 { top: 70vh !important; }
    .banner-text-overlay > div { width: 85% !important; }
    .banner-title { font-size: 4rem !important; }
    .banner-subtitle { font-size: 1.5rem !important; }
    .waves { height: 12vh !important; min-height: 80px !important; max-height: 120px !important; }
}

/* --- 大屏手机 (481px - 640px) --- */
@media (min-width: 481px) and (max-width: 640px) {
    #banner-wrapper { height: 75vh !important; min-height: 500px; top: 0 !important; }
    .absolute.w-full.z-30 { top: 75vh !important; }
    .banner-text-overlay > div { width: 90% !important; }
    .banner-title { font-size: 3.8rem !important; }
    .banner-subtitle { font-size: 1.125rem !important; }
    .waves { height: 10vh !important; min-height: 70px !important; max-height: 100px !important; }
}

/* --- 小屏手机 (480px 及以下) --- */
@media (max-width: 480px) {
    #banner-wrapper { height: 70vh !important; min-height: 450px; top: 0 !important; }
    .absolute.w-full.z-30 { top: 70vh !important; }
    .banner-text-overlay > div { width: 95% !important; }
    .banner-title { font-size: 3.2rem !important; }
    .banner-subtitle { font-size: 1rem !important; }
    .waves { height: 8vh !important; min-height: 60px !important; max-height: 80px !important; }
}

/* ==========================================================================
   桌面端布局 (1024px 以上)
   ========================================================================== */
@media (min-width: 1024px) {
    .banner-text-overlay { align-items: center !important; }
    .banner-text-overlay > div { margin-bottom: 0 !important; width: 75% !important; text-align: center !important; }
    .waves { height: 15vh !important; max-height: 150px !important; }
}

/* ==========================================================================
   特殊情况处理 (横屏、低高度屏幕)
   ========================================================================== */

/* --- 移动端横屏 --- */
@media (max-width: 1023px) and (orientation: landscape) {
    #banner-wrapper:not(.mobile-hide-banner) { height: 60vh !important; }
    .absolute.w-full.z-30:not(.mobile-main-no-banner) { top: 60vh !important; }
    .banner-title { font-size: 2.2rem !important; }
    .banner-subtitle { font-size: 0.9rem; }
}

/* --- 低高度屏幕 (例如横屏手机) --- */
@media (max-height: 700px) {
    #banner-wrapper { height: 75vh !important; min-height: 450px !important; }
    .banner-title { font-size: 3.8rem !important; }
    .waves { height: 8vh !important; }
}
@media (max-height: 600px) {
    #banner-wrapper { height: 80vh !important; min-height: 400px !important; }
    .banner-title { font-size: 3.2rem !important; }
    .waves { height: 6vh !important; }
}
@media (max-height: 500px) {
    #banner-wrapper { height: 85vh !important; min-height: 350px !important; }
    .banner-title { font-size: 2.8rem !important; }
    .waves { height: 5vh !important; }
}
</style>
