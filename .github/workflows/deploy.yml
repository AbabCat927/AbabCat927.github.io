# -----------------------------------------------------------------
# deploy.yml (Astro 官方推荐版)
# -----------------------------------------------------------------

# 工作流的名称
name: Deploy to GitHub Pages

on:
  # 当有代码推送到 main 分支时触发
  push:
    branches: [ main ]
  
  # 允许您在 GitHub Actions 页面手动触发
  workflow_dispatch:

# 为工作流设置权限，允许它读取仓库内容并向 GitHub Pages 写入
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # 我们不再需要 build 和 deploy 两个独立的 job，
  # Astro 官方 Action 将在一个 job 内完成所有事情。
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # 第一步：检出您的仓库代码
      - name: Checkout your repository
        uses: actions/checkout@v4

      # 【核心步骤】
      # 第二步：使用 Astro 官方的 Action 来构建和部署
      # `withastro/action` 包含了所有必需的步骤：
      #   1. 它会自动安装 Node.js 和 pnpm。
      #   2. 它会自动运行 `pnpm install` 安装依赖。
      #   3. 它会自动运行 `pnpm build` 构建网站。
      #   4. 它会自动将构建好的 `dist` 文件夹打包。
      #   5. 它会自动将打包文件上传，准备用于部署。
      - name: Build and Deploy
        uses: withastro/action@v2
        # with:
        #   # 您可以取消注释并添加一些自定义选项，但默认情况下通常不需要
        #   # node-version: 20
        #   # package-manager: pnpm

      # 第三步：从上传的产物进行部署
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4